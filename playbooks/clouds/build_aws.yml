---
- name: Build the Cloud Environment
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - ../group_vars/all
    - ../../inventory/aws/group_vars/all
  tasks:
    - name: Create the VPC
      ec2_vpc_net:
        region: "{{ cloud_config.region }}"
        cidr_block: "{{ cloud_config.vpc_cidr }}"
        name: "{{ cloud_config.vpc_name }}"
        state: present
      register: cluster_vpc
      
    - name: get the username running the deploy
      local_action: command whoami
      register: username_on_the_host

    - debug: var=username_on_the_host

    - name: Create the Subnet
      ec2_vpc_subnet:
        region: "{{ cloud_config.region }}"
        az: "{{ cloud_config.zone }}"
        vpc_id: "{{ cluster_vpc.vpc.id }}"
        cidr: "{{ cloud_config.subnet_cidr }}"
        resource_tags:
          Name: "{{ cloud_config.subnet_name }}"
        state: present
        wait: yes
        wait_timeout: 600
      register: cluster_subnet

    - name: Add an Internet Gateway to the VPC
      ec2_vpc_igw:
        region: "{{ cloud_config.region }}"
        vpc_id: "{{ cluster_vpc.vpc.id }}"
        state: present
      when: cloud_config.internet_gateway
      register: cluster_igw

    - name: Set up the public subnet route table for the Internet Gateway
      ec2_vpc_route_table:
        region: "{{ cloud_config.region }}"
        vpc_id: "{{ cluster_vpc.vpc.id }}"
        subnets: "{{ cluster_subnet.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ cluster_igw.gateway_id }}"
        state: present
      when: cluster_igw.gateway_id is defined

    - name: Create Security Groups
      ec2_group:
        region: "{{ cloud_config.region }}"
        name: "{{ item.name }}"
        vpc_id: "{{ cluster_vpc.vpc.id }}"
        description: "{{ item.description }}"
        purge_rules: false
        purge_rules_egress: false
        rules: "{{ item.rules }}"
      with_items: "{{ cloud_config.security_groups }}"
      register: cluster_security_groups

    - name: Upload the SSH Key
      ec2_key:
        region: "{{ cloud_config.region }}"
        name: "{{ cloud_config.ssh.keyname }}"
        key_material: {{ lookup('file', '/var/lib/awx/.ssh/id_rsa.pub') }}
        state: present
        wait: yes

    - name: Build AWS Nodes
      include: build_aws_nodes.yml
      when: item.count > 0
      with_items: "{{ nodes }}"
